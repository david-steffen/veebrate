var _elm_lang$elm_architecture_tutorial$Routes$NotFoundR = {ctor: 'NotFoundR'};
var _elm_lang$elm_architecture_tutorial$Routes$AboutR = {ctor: 'AboutR'};
var _elm_lang$elm_architecture_tutorial$Routes$aboutR = A2(
	_Bogdanp$elm_route$Route_ops[':='],
	_elm_lang$elm_architecture_tutorial$Routes$AboutR,
	_Bogdanp$elm_route$Route$static('about'));
var _elm_lang$elm_architecture_tutorial$Routes$ProjectsR = {ctor: 'ProjectsR'};
var _elm_lang$elm_architecture_tutorial$Routes$projectsR = A2(
	_Bogdanp$elm_route$Route_ops[':='],
	_elm_lang$elm_architecture_tutorial$Routes$ProjectsR,
	_Bogdanp$elm_route$Route$static('projects'));
var _elm_lang$elm_architecture_tutorial$Routes$TimeLogsR = {ctor: 'TimeLogsR'};
var _elm_lang$elm_architecture_tutorial$Routes$timeLogsR = A2(
	_Bogdanp$elm_route$Route_ops[':='],
	_elm_lang$elm_architecture_tutorial$Routes$TimeLogsR,
	_Bogdanp$elm_route$Route$static('timeLogs'));
var _elm_lang$elm_architecture_tutorial$Routes$HomeR = {ctor: 'HomeR'};
var _elm_lang$elm_architecture_tutorial$Routes$homeR = A2(
	_Bogdanp$elm_route$Route_ops[':='],
	_elm_lang$elm_architecture_tutorial$Routes$HomeR,
	_Bogdanp$elm_route$Route$static(''));
var _elm_lang$elm_architecture_tutorial$Routes$sitemap = _Bogdanp$elm_route$Route$router(
	{
		ctor: '::',
		_0: _elm_lang$elm_architecture_tutorial$Routes$homeR,
		_1: {
			ctor: '::',
			_0: _elm_lang$elm_architecture_tutorial$Routes$timeLogsR,
			_1: {
				ctor: '::',
				_0: _elm_lang$elm_architecture_tutorial$Routes$projectsR,
				_1: {
					ctor: '::',
					_0: _elm_lang$elm_architecture_tutorial$Routes$aboutR,
					_1: {ctor: '[]'}
				}
			}
		}
	});
var _elm_lang$elm_architecture_tutorial$Routes$match = function (_p0) {
	return A2(
		_elm_lang$core$Maybe$withDefault,
		_elm_lang$elm_architecture_tutorial$Routes$NotFoundR,
		A2(_Bogdanp$elm_route$Route$match, _elm_lang$elm_architecture_tutorial$Routes$sitemap, _p0));
};
var _elm_lang$elm_architecture_tutorial$Routes$parsePath = function (_p1) {
	return _elm_lang$elm_architecture_tutorial$Routes$match(
		function (_) {
			return _.pathname;
		}(_p1));
};
var _elm_lang$elm_architecture_tutorial$Routes$toString = function (r) {
	var _p2 = r;
	switch (_p2.ctor) {
		case 'HomeR':
			return A2(
				_Bogdanp$elm_route$Route$reverse,
				_elm_lang$elm_architecture_tutorial$Routes$homeR,
				{ctor: '[]'});
		case 'TimeLogsR':
			return A2(
				_Bogdanp$elm_route$Route$reverse,
				_elm_lang$elm_architecture_tutorial$Routes$timeLogsR,
				{ctor: '[]'});
		case 'ProjectsR':
			return A2(
				_Bogdanp$elm_route$Route$reverse,
				_elm_lang$elm_architecture_tutorial$Routes$projectsR,
				{ctor: '[]'});
		case 'AboutR':
			return A2(
				_Bogdanp$elm_route$Route$reverse,
				_elm_lang$elm_architecture_tutorial$Routes$aboutR,
				{ctor: '[]'});
		default:
			return _elm_lang$core$Native_Utils.crashCase(
				'Routes',
				{
					start: {line: 43, column: 5},
					end: {line: 57, column: 49}
				},
				_p2)('cannot render NotFound');
	}
};
var _elm_lang$elm_architecture_tutorial$Routes$navigateTo = function (_p4) {
	return _elm_lang$navigation$Navigation$newUrl(
		_elm_lang$elm_architecture_tutorial$Routes$toString(_p4));
};
