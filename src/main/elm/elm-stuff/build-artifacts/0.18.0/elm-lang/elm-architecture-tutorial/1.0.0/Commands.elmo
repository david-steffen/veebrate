var _elm_lang$elm_architecture_tutorial$Commands$timeLogEncoder = function (timeLog) {
	var attributes = {
		ctor: '::',
		_0: {
			ctor: '_Tuple2',
			_0: 'id',
			_1: _elm_lang$core$Json_Encode$string(timeLog.id)
		},
		_1: {
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'content',
				_1: _elm_lang$core$Json_Encode$string(timeLog.content)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'time',
					_1: _elm_lang$core$Json_Encode$int(timeLog.time)
				},
				_1: {ctor: '[]'}
			}
		}
	};
	return _elm_lang$core$Json_Encode$object(attributes);
};
var _elm_lang$elm_architecture_tutorial$Commands$saveTimeLogUrl = function (timeLogId) {
	return A2(_elm_lang$core$Basics_ops['++'], 'http://localhost:4000/timeLogs/', timeLogId);
};
var _elm_lang$elm_architecture_tutorial$Commands$timeLogDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'time',
	_elm_lang$core$Json_Decode$int,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'content',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'_id',
			_elm_lang$core$Json_Decode$string,
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_elm_lang$elm_architecture_tutorial$Models$TimeLog))));
var _elm_lang$elm_architecture_tutorial$Commands$saveTimeLogRequest = function (timeLog) {
	return _elm_lang$http$Http$request(
		{
			body: _elm_lang$http$Http$jsonBody(
				_elm_lang$elm_architecture_tutorial$Commands$timeLogEncoder(timeLog)),
			expect: _elm_lang$http$Http$expectJson(_elm_lang$elm_architecture_tutorial$Commands$timeLogDecoder),
			headers: {ctor: '[]'},
			method: 'PATCH',
			timeout: _elm_lang$core$Maybe$Nothing,
			url: _elm_lang$elm_architecture_tutorial$Commands$saveTimeLogUrl(timeLog.id),
			withCredentials: false
		});
};
var _elm_lang$elm_architecture_tutorial$Commands$saveTimeLogCmd = function (timeLog) {
	return A2(
		_elm_lang$http$Http$send,
		_elm_lang$elm_architecture_tutorial$Msgs$OnTimeLogSave,
		_elm_lang$elm_architecture_tutorial$Commands$saveTimeLogRequest(timeLog));
};
var _elm_lang$elm_architecture_tutorial$Commands$timeLogsDecoder = _elm_lang$core$Json_Decode$list(_elm_lang$elm_architecture_tutorial$Commands$timeLogDecoder);
var _elm_lang$elm_architecture_tutorial$Commands$fetchTimeLogsUrl = '/api/tasks';
var _elm_lang$elm_architecture_tutorial$Commands$fetchTimeLogs = A2(
	_elm_lang$core$Platform_Cmd$map,
	_elm_lang$elm_architecture_tutorial$Msgs$OnFetchTimeLogs,
	_krisajenkins$remotedata$RemoteData$sendRequest(
		A2(_elm_lang$http$Http$get, _elm_lang$elm_architecture_tutorial$Commands$fetchTimeLogsUrl, _elm_lang$elm_architecture_tutorial$Commands$timeLogsDecoder)));
